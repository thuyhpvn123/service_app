// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: account_state.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type STAKE_TYPE int32

const (
	STAKE_TYPE_VALIDATOR     STAKE_TYPE = 0
	STAKE_TYPE_NODE          STAKE_TYPE = 1
	STAKE_TYPE_VERIFY_MINER  STAKE_TYPE = 2
	STAKE_TYPE_EXECUTE_MINER STAKE_TYPE = 3
)

// Enum value maps for STAKE_TYPE.
var (
	STAKE_TYPE_name = map[int32]string{
		0: "VALIDATOR",
		1: "NODE",
		2: "VERIFY_MINER",
		3: "EXECUTE_MINER",
	}
	STAKE_TYPE_value = map[string]int32{
		"VALIDATOR":     0,
		"NODE":          1,
		"VERIFY_MINER":  2,
		"EXECUTE_MINER": 3,
	}
)

func (x STAKE_TYPE) Enum() *STAKE_TYPE {
	p := new(STAKE_TYPE)
	*p = x
	return p
}

func (x STAKE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STAKE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_account_state_proto_enumTypes[0].Descriptor()
}

func (STAKE_TYPE) Type() protoreflect.EnumType {
	return &file_account_state_proto_enumTypes[0]
}

func (x STAKE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STAKE_TYPE.Descriptor instead.
func (STAKE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{0}
}

type StakeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address                 []byte     `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Amount                  []byte     `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Type                    STAKE_TYPE `protobuf:"varint,3,opt,name=Type,proto3,enum=account_state.STAKE_TYPE" json:"Type,omitempty"`
	PublicConnectionAddress string     `protobuf:"bytes,4,opt,name=PublicConnectionAddress,proto3" json:"PublicConnectionAddress,omitempty"`
}

func (x *StakeState) Reset() {
	*x = StakeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakeState) ProtoMessage() {}

func (x *StakeState) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakeState.ProtoReflect.Descriptor instead.
func (*StakeState) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{0}
}

func (x *StakeState) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *StakeState) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *StakeState) GetType() STAKE_TYPE {
	if x != nil {
		return x.Type
	}
	return STAKE_TYPE_VALIDATOR
}

func (x *StakeState) GetPublicConnectionAddress() string {
	if x != nil {
		return x.PublicConnectionAddress
	}
	return ""
}

type AccountState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            []byte              `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	LastHash           []byte              `protobuf:"bytes,2,opt,name=LastHash,proto3" json:"LastHash,omitempty"`
	Balance            []byte              `protobuf:"bytes,3,opt,name=Balance,proto3" json:"Balance,omitempty"`
	PendingBalance     []byte              `protobuf:"bytes,4,opt,name=PendingBalance,proto3" json:"PendingBalance,omitempty"`
	SmartContractState *SmartContractState `protobuf:"bytes,5,opt,name=SmartContractState,proto3" json:"SmartContractState,omitempty"`
	DeviceKey          []byte              `protobuf:"bytes,6,opt,name=DeviceKey,proto3" json:"DeviceKey,omitempty"`
	StakeStates        []*StakeState       `protobuf:"bytes,7,rep,name=StakeStates,proto3" json:"StakeStates,omitempty"`
}

func (x *AccountState) Reset() {
	*x = AccountState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountState) ProtoMessage() {}

func (x *AccountState) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountState.ProtoReflect.Descriptor instead.
func (*AccountState) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{1}
}

func (x *AccountState) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AccountState) GetLastHash() []byte {
	if x != nil {
		return x.LastHash
	}
	return nil
}

func (x *AccountState) GetBalance() []byte {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AccountState) GetPendingBalance() []byte {
	if x != nil {
		return x.PendingBalance
	}
	return nil
}

func (x *AccountState) GetSmartContractState() *SmartContractState {
	if x != nil {
		return x.SmartContractState
	}
	return nil
}

func (x *AccountState) GetDeviceKey() []byte {
	if x != nil {
		return x.DeviceKey
	}
	return nil
}

func (x *AccountState) GetStakeStates() []*StakeState {
	if x != nil {
		return x.StakeStates
	}
	return nil
}

type SmartContractState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorPublicKey []byte   `protobuf:"bytes,1,opt,name=CreatorPublicKey,proto3" json:"CreatorPublicKey,omitempty"`
	StorageHost      string   `protobuf:"bytes,2,opt,name=StorageHost,proto3" json:"StorageHost,omitempty"`           // host that store smart contract state of account
	CodeHash         []byte   `protobuf:"bytes,3,opt,name=CodeHash,proto3" json:"CodeHash,omitempty"`                 // hash of smart contract state
	StorageRoot      []byte   `protobuf:"bytes,4,opt,name=StorageRoot,proto3" json:"StorageRoot,omitempty"`           // hash of smart contract state
	LogsHash         []byte   `protobuf:"bytes,5,opt,name=LogsHash,proto3" json:"LogsHash,omitempty"`                 // hash of smart contract state
	RelatedAddresses [][]byte `protobuf:"bytes,6,rep,name=RelatedAddresses,proto3" json:"RelatedAddresses,omitempty"` // address of smart contract relate to this smart contract, use for parrallel execute
	StorageAddress   []byte   `protobuf:"bytes,7,opt,name=StorageAddress,proto3" json:"StorageAddress,omitempty"`
}

func (x *SmartContractState) Reset() {
	*x = SmartContractState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractState) ProtoMessage() {}

func (x *SmartContractState) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractState.ProtoReflect.Descriptor instead.
func (*SmartContractState) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{2}
}

func (x *SmartContractState) GetCreatorPublicKey() []byte {
	if x != nil {
		return x.CreatorPublicKey
	}
	return nil
}

func (x *SmartContractState) GetStorageHost() string {
	if x != nil {
		return x.StorageHost
	}
	return ""
}

func (x *SmartContractState) GetCodeHash() []byte {
	if x != nil {
		return x.CodeHash
	}
	return nil
}

func (x *SmartContractState) GetStorageRoot() []byte {
	if x != nil {
		return x.StorageRoot
	}
	return nil
}

func (x *SmartContractState) GetLogsHash() []byte {
	if x != nil {
		return x.LogsHash
	}
	return nil
}

func (x *SmartContractState) GetRelatedAddresses() [][]byte {
	if x != nil {
		return x.RelatedAddresses
	}
	return nil
}

func (x *SmartContractState) GetStorageAddress() []byte {
	if x != nil {
		return x.StorageAddress
	}
	return nil
}

type SmartContractData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    []byte            `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Storage map[string][]byte `protobuf:"bytes,2,rep,name=Storage,proto3" json:"Storage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SmartContractData) Reset() {
	*x = SmartContractData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractData) ProtoMessage() {}

func (x *SmartContractData) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractData.ProtoReflect.Descriptor instead.
func (*SmartContractData) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{3}
}

func (x *SmartContractData) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SmartContractData) GetStorage() map[string][]byte {
	if x != nil {
		return x.Storage
	}
	return nil
}

type SmartContractConfirm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            []byte              `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	SmartContractState *SmartContractState `protobuf:"bytes,2,opt,name=SmartContractState,proto3" json:"SmartContractState,omitempty"`
}

func (x *SmartContractConfirm) Reset() {
	*x = SmartContractConfirm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractConfirm) ProtoMessage() {}

func (x *SmartContractConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractConfirm.ProtoReflect.Descriptor instead.
func (*SmartContractConfirm) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{4}
}

func (x *SmartContractConfirm) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SmartContractConfirm) GetSmartContractState() *SmartContractState {
	if x != nil {
		return x.SmartContractState
	}
	return nil
}

type SmartContractUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   []byte            `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Code      []byte            `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Storage   map[string][]byte `protobuf:"bytes,3,rep,name=Storage,proto3" json:"Storage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EventLogs []*EventLogs      `protobuf:"bytes,4,rep,name=EventLogs,proto3" json:"EventLogs,omitempty"`
}

func (x *SmartContractUpdateData) Reset() {
	*x = SmartContractUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractUpdateData) ProtoMessage() {}

func (x *SmartContractUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractUpdateData.ProtoReflect.Descriptor instead.
func (*SmartContractUpdateData) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{5}
}

func (x *SmartContractUpdateData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SmartContractUpdateData) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SmartContractUpdateData) GetStorage() map[string][]byte {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *SmartContractUpdateData) GetEventLogs() []*EventLogs {
	if x != nil {
		return x.EventLogs
	}
	return nil
}

type SmartContractUpdateDataHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          []byte       `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Code             []byte       `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`
	SortedMapStorage [][]byte     `protobuf:"bytes,3,rep,name=SortedMapStorage,proto3" json:"SortedMapStorage,omitempty"`
	EventLogs        []*EventLogs `protobuf:"bytes,4,rep,name=EventLogs,proto3" json:"EventLogs,omitempty"`
}

func (x *SmartContractUpdateDataHash) Reset() {
	*x = SmartContractUpdateDataHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractUpdateDataHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractUpdateDataHash) ProtoMessage() {}

func (x *SmartContractUpdateDataHash) ProtoReflect() protoreflect.Message {
	mi := &file_account_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractUpdateDataHash.ProtoReflect.Descriptor instead.
func (*SmartContractUpdateDataHash) Descriptor() ([]byte, []int) {
	return file_account_state_proto_rawDescGZIP(), []int{6}
}

func (x *SmartContractUpdateDataHash) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SmartContractUpdateDataHash) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *SmartContractUpdateDataHash) GetSortedMapStorage() [][]byte {
	if x != nil {
		return x.SortedMapStorage
	}
	return nil
}

func (x *SmartContractUpdateDataHash) GetEventLogs() []*EventLogs {
	if x != nil {
		return x.EventLogs
	}
	return nil
}

var File_account_state_proto protoreflect.FileDescriptor

var file_account_state_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xb4, 0x02, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61,
	0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4c, 0x61,
	0x73, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x12, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x90, 0x02, 0x0a, 0x12, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x43,
	0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4c, 0x6f, 0x67,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x10, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x3a, 0x0a, 0x0c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x51, 0x0a, 0x12, 0x53,
	0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x12, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x86,
	0x02, 0x0a, 0x17, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x1b, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d,
	0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x10, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x2a, 0x4a, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x12, 0x0d, 0x0a, 0x09, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x45, 0x52, 0x10,
	0x03, 0x42, 0x2f, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x69, 0x61, 0x69, 0x76, 0x6e, 0x2e,
	0x66, 0x69, 0x6e, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_account_state_proto_rawDescOnce sync.Once
	file_account_state_proto_rawDescData = file_account_state_proto_rawDesc
)

func file_account_state_proto_rawDescGZIP() []byte {
	file_account_state_proto_rawDescOnce.Do(func() {
		file_account_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_state_proto_rawDescData)
	})
	return file_account_state_proto_rawDescData
}

var file_account_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_account_state_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_account_state_proto_goTypes = []interface{}{
	(STAKE_TYPE)(0),                     // 0: account_state.STAKE_TYPE
	(*StakeState)(nil),                  // 1: account_state.StakeState
	(*AccountState)(nil),                // 2: account_state.AccountState
	(*SmartContractState)(nil),          // 3: account_state.SmartContractState
	(*SmartContractData)(nil),           // 4: account_state.SmartContractData
	(*SmartContractConfirm)(nil),        // 5: account_state.SmartContractConfirm
	(*SmartContractUpdateData)(nil),     // 6: account_state.SmartContractUpdateData
	(*SmartContractUpdateDataHash)(nil), // 7: account_state.SmartContractUpdateDataHash
	nil,                                 // 8: account_state.SmartContractData.StorageEntry
	nil,                                 // 9: account_state.SmartContractUpdateData.StorageEntry
	(*EventLogs)(nil),                   // 10: event_log.EventLogs
}
var file_account_state_proto_depIdxs = []int32{
	0,  // 0: account_state.StakeState.Type:type_name -> account_state.STAKE_TYPE
	3,  // 1: account_state.AccountState.SmartContractState:type_name -> account_state.SmartContractState
	1,  // 2: account_state.AccountState.StakeStates:type_name -> account_state.StakeState
	8,  // 3: account_state.SmartContractData.Storage:type_name -> account_state.SmartContractData.StorageEntry
	3,  // 4: account_state.SmartContractConfirm.SmartContractState:type_name -> account_state.SmartContractState
	9,  // 5: account_state.SmartContractUpdateData.Storage:type_name -> account_state.SmartContractUpdateData.StorageEntry
	10, // 6: account_state.SmartContractUpdateData.EventLogs:type_name -> event_log.EventLogs
	10, // 7: account_state.SmartContractUpdateDataHash.EventLogs:type_name -> event_log.EventLogs
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_account_state_proto_init() }
func file_account_state_proto_init() {
	if File_account_state_proto != nil {
		return
	}
	file_event_log_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_account_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractConfirm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractUpdateDataHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_state_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_state_proto_goTypes,
		DependencyIndexes: file_account_state_proto_depIdxs,
		EnumInfos:         file_account_state_proto_enumTypes,
		MessageInfos:      file_account_state_proto_msgTypes,
	}.Build()
	File_account_state_proto = out.File
	file_account_state_proto_rawDesc = nil
	file_account_state_proto_goTypes = nil
	file_account_state_proto_depIdxs = nil
}
