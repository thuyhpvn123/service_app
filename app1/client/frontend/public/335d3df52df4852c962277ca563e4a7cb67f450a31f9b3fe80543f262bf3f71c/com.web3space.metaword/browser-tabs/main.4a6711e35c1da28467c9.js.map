{"version":3,"file":"main.4a6711e35c1da28467c9.js","mappings":"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","sources":["webpack://bundle-base/../../packages/redux/src/Reducer/action.js","webpack://bundle-base/../../packages/redux/src/Reducer/reducer.js","webpack://bundle-base/../../packages/core/src/utils/errors.ts","webpack://bundle-base/../../packages/core/src/constants/message-types.js","webpack://bundle-base/../../packages/core/src/utils/event-emitter.ts","webpack://bundle-base/../../packages/core/src/index.ts","webpack://bundle-base/../../packages/redux/src/Person/action.js","webpack://bundle-base/../../packages/redux/src/Person/reducer.js","webpack://bundle-base/../../packages/redux/src/Wallet/action.js","webpack://bundle-base/../../packages/redux/src/Wallet/reducer.js","webpack://bundle-base/../../packages/redux/src/Setting/action.js","webpack://bundle-base/../../packages/redux/src/Setting/reducer.js","webpack://bundle-base/../../packages/redux/src/CreateWallet/action.js","webpack://bundle-base/../../packages/redux/src/CreateWallet/reducer.js","webpack://bundle-base/../../packages/redux/src/SendingCoin/action.js","webpack://bundle-base/../../packages/redux/src/SendingCoin/reducer.js","webpack://bundle-base/../../packages/redux/src/NodeManage/action.js","webpack://bundle-base/../../packages/redux/src/NodeManage/reducer.js","webpack://bundle-base/../../packages/redux/src/NotificationController/action.js","webpack://bundle-base/../../packages/redux/src/NotificationController/reducer.js","webpack://bundle-base/../../packages/redux/src/store.js","webpack://bundle-base/../../packages/redux/src/index.ts","webpack://bundle-base/../../packages/assets/icons/hide.tsx","webpack://bundle-base/./src/App.jsx","webpack://bundle-base/./src/reportWebVitals.js","webpack://bundle-base/./src/index.tsx"],"sourcesContent":["import createAction from '../action';\n\nexport const ProductActionTypes = Object.freeze({\n  IS_CONNECT_DRIVER: 'IS_CONNECT_DRIVER',\n  SET_LOADING: 'SET_LOADING',\n  REFRESH: 'REFRESH',\n});\n\nexport const setConnectDriver = (isConnect) => async (dispatch) => {\n  return dispatch(\n    createAction(ProductActionTypes.IS_CONNECT_DRIVER, isConnect),\n  );\n};\n\nexport const setLoading = (loading) => async (dispatch) => {\n  return dispatch(createAction(ProductActionTypes.SET_LOADING, loading));\n};\n\nexport const setRefresh = (value) => async (dispatch) => {\n  return dispatch(createAction(ProductActionTypes.REFRESH, value));\n};\n","import { ProductActionTypes } from './action';\n\nconst initState = {\n  isConnect: false,\n  isLoading: false,\n  isReRefresh: false,\n};\n\nexport default function reducer(state = initState, action) {\n  switch (action.type) {\n    case ProductActionTypes.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ProductActionTypes.IS_CONNECT_DRIVER:\n      return { ...state, isConnect: action.payload };\n    case ProductActionTypes.REFRESH:\n      return {\n        ...state,\n        isReRefresh: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n}\n","export class SystemNotReadyError extends Error {\n  constructor() {\n    super('System is not ready');\n    this.name = 'SYSTEM_NOT_READY';\n  }\n}\n\nexport class NotAllowedType extends Error {\n  constructor() {\n    super('Message type is not allowed');\n    this.name = 'NOT_ALLOWED_TYPE';\n  }\n}\n\nexport class RequestPermissionFailed extends Error {\n  success?: boolean;\n  permission?: any;\n  constructor() {\n    super('Access is denied');\n    this.name = 'REQUEST_PERMISSION_FAILED';\n  }\n}\n","const MessageTypes = Object.freeze({\n  INFO: 'info',\n  EXIT: 'exit',\n  PERMISSION: 'permission',\n});\n\nexport default MessageTypes;\n","import { receiveData } from '..';\n\nexport default class EventEmitter {\n  _listeners: any;\n\n  constructor() {\n    this._listeners = {};\n    this.on = this.on.bind(this);\n    this.removeEventListener = this.removeEventListener.bind(this);\n    this.emit = this.emit.bind(this);\n  }\n\n  on(event: keyof typeof receiveData | any, listener?: any) {\n    if (!this._listeners[event]) {\n      this._listeners[event] = [];\n    }\n    this._listeners[event].push(listener);\n    return this;\n  }\n\n  removeEventListener(event?: any, listener?: any) {\n    if (this._listeners[event]) {\n      this._listeners[event] = this._listeners[event].filter((l) => l !== listener);\n    }\n  }\n  removeAllEventListeners(event) {\n    if (this._listeners[event]) {\n      delete this._listeners[event];\n    }\n  }\n\n  emit(event, ...args) {\n    const cbs = this._listeners[event];\n    if (cbs) {\n      cbs.forEach((cb) => cb(...args));\n    }\n  }\n}\n","import MessageTypes from \"./constants/message-types\";\nimport {\n  // NotAllowedType,\n  RequestPermissionFailed,\n  SystemNotReadyError,\n} from \"./utils/errors\";\nimport EventEmitter from \"./utils/event-emitter\";\n\n/**\n *\n * @param {string} message\n * @returns {Promise<string | {type: string; payload: any} | undefined>}\n */\n//receive nsg\n// data\n\nexport const receiveData = {\n  ready: -1,\n  \"get-person-info\": -1,\n  \"get-wallet\": -1,\n  \"get-view-on-boarding\": -1,\n  \"check-performance\": -1,\n  \"get-raw-seed\": -1,\n  \"get-raw-seed-confirm\": -1,\n  \"create-wallet\": -1,\n  \"get-node\": -1,\n  \"connect-node\": -1,\n  \"scan-qr\": -1,\n  \"get-file-zip\": -1,\n  \"get-balance-wallet\": -1,\n  \"unzip-process\": -1,\n  \"unzip-file\": -1,\n  \"read-abi-file\": -1,\n  \"get-all-smart-contract\": -1,\n  \"watch-approve\": -1,\n  \"send-transaction\": -1,\n  \"take-picture\": -1,\n  \"get-transaction\": -1,\n  \"read-abi-string\": -1,\n  \"get-white-list-pagination\": -1,\n  \"get-my-setting\": -1,\n  \"set-status-notification\": -1,\n  \"backup-data\": -1,\n  \"on-zip-process\": -1,\n  \"on-zip-result\": -1,\n  \"sync-data-to-watch\": -1,\n  \"insert-white-list\": -1,\n  \"check-white-list-is-exist\": -1,\n  \"copy-clipboard\": -1,\n  \"capture-screen\": -1,\n  \"get-qr-from-image\": -1,\n  \"get-qr-from-camera\": -1,\n  \"get-from-clipboard\": -1,\n  \"select-image\": -1,\n  \"check-amount\": -1,\n  \"set-pin-code\": -1,\n  \"check-pin-code\": -1,\n  \"request-face-touch-id\": -1,\n  \"on-off-confirm-watch\": -1,\n  tel: -1,\n  \"register-bottom\": -1,\n  \"register-bottom-off\": -1,\n  \"on-click-submit-button-bottom\": -1,\n  \"select-date\": -1,\n  \"spinner-register-data\": -1,\n  \"event-onError\": -1,\n  \"spinner-close\": -1,\n  \"open-spinner\": -1,\n  \"on-spinner-selected\": -1,\n  \"on-listen-info\": -1,\n  \"spinner-selected\": -1,\n  \"searching-on-spinner\": -1,\n  \"update-d-app\": -1,\n  \"on-delete-d-app\": -1,\n  \"delete-d-app\": -1,\n  \"on-unzip-process\": -1,\n  \"on-download-process\": -1,\n  \"on-start-download-app\": -1,\n  \"on-start-verify-app\": -1,\n  \"checking-sign-app\": -1,\n  \"has-device-touch\": -1,\n  \"get-app-info-from-url\": -1,\n  \"on-zip-start\": -1,\n  \"on-receive-message\": -1,\n  \"get-backup-files\": -1,\n  \"share-item\": -1,\n  \"restore-by-file\": -1,\n  \"unzip-fail\": -1,\n  \"deploy-d-app\": -1,\n  \"deploy-sc\": -1,\n  \"open-dapp\": -1,\n  \"get-all-d-app\": -1,\n  \"start-server\": -1,\n  \"get-status-connected\": -1,\n  \"get-wallet-info\": -1,\n  \"open-server-socket\": -1,\n  \"connect-to-server-socket\": -1,\n  \"send-file\": -1,\n  \"check-is-online\": -1,\n  \"get-data\": -1,\n\n  // Bottom navigate\n  \"new-tab\": -1,\n  \"navigate-browser-tabs\": -1,\n  search: -1,\n  next: -1,\n  back: -1,\n  \"show-modal-categories\": -1,\n  reload: -1,\n  share: -1,\n  \"add-bookmark\": -1,\n  \"amount-tab\": -1,\n  \"focus-search\": -1,\n\n  // Category\n  \"navigate-bookmark\": -1,\n  \"navigate-subscription\": -1,\n  \"navigate-history\": -1,\n  \"navigate-extension\": -1,\n  \"navigate-setting\": -1,\n  \"exit-browser\": -1,\n  \"add-shortcut\": -1,\n\n  // Create new folder\n  \"create-bookmark-folder\": -1,\n\n  // Add bookmark\n  \"close-add-bookmark\": -1,\n  \"save-bookmark\": -1,\n  \"get-bookmark-folders\": -1,\n  \"chosen-bookmark\": -1,\n  \"get-no-folder-bookmarks\": -1,\n\n  //Bookmark\n  \"navigate-bookmark-detail\": -1,\n  \"get-bookmarks\": -1,\n  \"delete-bookmark\": -1,\n  \"delete-bookmark-folder\": -1,\n  \"choose-bookmark\": -1,\n\n  // tabs\n  \"get-tabs\": -1,\n  \"close-tab\": -1,\n  \"close-browser-tabs\": -1,\n  \"close-all\": -1,\n\n  // Histories\n  \"get-histories\": -1,\n  \"choose-history\": -1,\n  \"delete-history\": -1,\n  \"update-navigate\": -1,\n};\n\nconst globalWindow = window as any;\n\nasync function waitUntil(command) {\n  return await new Promise((resolve: any) => {\n    const interval = setInterval(() => {\n      if (typeof receiveData[command] != \"number\") {\n        resolve();\n        clearInterval(interval);\n      }\n    }, 1000);\n  });\n}\nasync function sendMessageToFlutter(message) {\n  if (typeof receiveData[message.command] != \"undefined\") {\n    receiveData[message.command] = 0;\n  }\n  //post msg\n  if (\n    globalWindow.webkit &&\n    globalWindow.webkit.messageHandlers &&\n    globalWindow.webkit.messageHandlers.callbackHandler\n  ) {\n    globalWindow.webkit.messageHandlers.callbackHandler.postMessage(\n      JSON.stringify(message)\n    );\n  } else {\n    console.log(\"not found globalWindow.webkit\");\n  }\n\n  if (typeof receiveData[message.command] === \"undefined\") {\n    return;\n  }\n\n  // sleep\n  await waitUntil(message.command);\n\n  // console.log(\"4444\", message.command);\n  // console.log(\"5555\", receiveData[message.command]);\n\n  return receiveData[message.command];\n\n  // return window.flutter_inappwebview?.callHandler?.('Flutter', message);\n}\n\nclass SystemCore extends EventEmitter {\n  _isReady: boolean;\n  _hasNotch: boolean;\n  // get acceptedTypes() {\n  //   return this._acceptedTypes;\n  // }\n\n  get statusNotch() {\n    return this._hasNotch;\n  }\n  setStatusNotch(status = false) {\n    this._hasNotch = status;\n  }\n\n  constructor() {\n    super();\n    // this._isReady = !window.flutter_inappwebview ? !!window.opener : false;\n    this._isReady =\n      globalWindow.webkit &&\n      globalWindow.webkit.messageHandlers &&\n      globalWindow.webkit.messageHandlers.callbackHandler\n        ? true\n        : !!window.opener;\n    // this._acceptedTypes = Object.values(MessageTypes);\n    this._hasNotch = false;\n    this._subscribe();\n  }\n\n  get isReady() {\n    return this._isReady;\n  }\n  // type,\n  async send(\n    payload:\n      | keyof typeof receiveData\n      | { command: keyof typeof receiveData }\n      | {},\n    cb?: any\n  ) {\n    if (!this.isReady) {\n      throw new SystemNotReadyError();\n    }\n    // if (!this._checkIsAllowType(type)) {\n    //   throw new NotAllowedType();\n    // }\n    // type,\n    // const msg = JSON.stringify(payload);\n    if (globalWindow.webkit && globalWindow.webkit.messageHandlers) {\n      // const res = await sendMessageToFlutter(msg);\n      const res = await sendMessageToFlutter(payload);\n      // console.log('xxxxx2', res);\n      if (res == null) {\n        return;\n      }\n      if (typeof res === \"string\") {\n        return this._handleJsonStringMessage(res);\n      }\n      const command = res.command;\n      const response = res.data;\n      receiveData[command] = -1;\n\n      console.log(\"response =>\", response);\n      if (typeof response == \"undefined\") {\n        throw `Command not response - ${JSON.stringify(res)}`;\n      }\n      if (response.success !== true) {\n        throw response.message;\n      }\n      // if (res?.type !== type) {\n      //   return;\n      // }\n      // res?.type || type,\n      // this.emit(command, res.data);\n      return res.data;\n    }\n    // type,\n    var valueResponse = await this._postMessageToWindow(payload);\n    // console.log('valueResponse = ', valueResponse);\n    return valueResponse;\n  }\n\n  async exit() {\n    await this.send(MessageTypes.EXIT);\n  }\n\n  async requestPermission(permission, option = undefined) {\n    const res = await this.send(MessageTypes.PERMISSION, {\n      permission,\n      option,\n    });\n    if (!res?.payload?.success) {\n      const error = new RequestPermissionFailed();\n\n      if (!res?.payload) {\n        error.success = false;\n        error.permission = permission;\n        throw error;\n      }\n      Object.assign(error, res.payload);\n      throw error;\n    }\n    res.payload.permission = permission;\n    return res.payload;\n  }\n  // type,\n  _postMessageToWindow(message: keyof typeof receiveData | {}) {\n    const _this = this;\n    return new Promise((resolve) => {\n      const handleReceivedResponse = function (this: any, res) {\n        resolve(res);\n        // type,\n        this.removeEventListener(handleReceivedResponse);\n      };\n      // type,\n      this.on(handleReceivedResponse.bind(this, _this));\n      window.opener?.postMessage(message, \"*\");\n    });\n  }\n\n  // _checkIsAllowType(type) {\n  //   return this._acceptedTypes.includes(type);\n  // }\n\n  _subscribe() {\n    window.addEventListener(\"flutterInAppWebViewPlatformReady\", () => {\n      this._isReady = true;\n      this.emit(\"ready\");\n    });\n    window.addEventListener(\"message\", (ev) => {\n      const { data } = ev;\n      // console.log('=== React - 22222 ====', JSON.stringify(data), typeof data);\n      if (typeof data === \"string\") {\n        return this._handleJsonStringMessage(data, true);\n      }\n      if (data.platform == \"ios\") {\n        console.log(\"=== React - 33333 ====\", data, data.command);\n        if (data.isSocket !== true) {\n          console.log(\"=== React - 44444 ====\", data.data);\n          return (receiveData[data.command] = data.data);\n        }\n        // console.log('=== React - receive socket ====', data, data.command);\n        this.emit(data.command, data.data);\n        return;\n      }\n      this.emit(data.command, data.data);\n      // this.emit(data);\n      return data;\n    });\n  }\n\n  /**\n   *\n   * @param {string} stringData\n   * @returns {Promise<{type: string; payload: any} | undefined>}\n   */\n  _handleJsonStringMessage(stringData: any, isListen?: any) {\n    if (!stringData) {\n      return;\n    }\n    try {\n      const res = JSON.parse(stringData);\n      // console.log(\"<=== res ===>\", JSON.stringify(res));\n\n      const command = res.command;\n      const response = res.data;\n      if (response.success !== true) {\n        if (isListen) {\n          this.emit(command, res);\n        }\n        throw response.message;\n      }\n      if (isListen) {\n        this.emit(command, res);\n      }\n      return res.data;\n    } catch (err: any) {\n      throw err.toString();\n    }\n  }\n}\n\nconst core = new SystemCore();\nexport { core as SystemCore };\n","import { SystemCore } from '@@packages/core';\nimport createAction from '../action';\n\nexport const PersonActionTypes = Object.freeze({\n  GET_PERSON_INFO: 'GET_PERSON_INFO',\n  GET_PERSON_INFO_SUCCESS: 'GET_PERSON_INFO_SUCCESS',\n  GET_PERSON_INFO_FAIL: 'GET_PERSON_INFO_FAIL',\n  SET_PERSON_INFO: 'SET_PERSON_INFO',\n  SET_PERSON_INFO_SUCCESS: 'SET_PERSON_INFO_SUCCESS',\n  SET_PERSON_INFO_FAIL: 'SET_PERSON_INFO_FAIL',\n  SET_ACCOUNT: 'SET_ACCOUNT',\n  SET_TRANSACTION_LIST: 'SET_TRANSACTION_LIST',\n  SET_ITEM_TRANSACTION: 'SET_ITEM_TRANSACTION',\n  SET_SHOW_AVATAR: 'SET_SHOW_AVATAR',\n});\n\nexport function getPersonInfo(dispatch, getState) {\n  dispatch({ type: PersonActionTypes.GET_PERSON_INFO });\n  SystemCore.send({\n    command: 'get-person-info',\n  })\n    .then((res) => {\n      dispatch({\n        type: PersonActionTypes.GET_PERSON_INFO_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: PersonActionTypes.GET_PERSON_INFO_FAIL, payload: err });\n    });\n}\n\nexport const createAccount = (value, callback) => async (dispatch) => {\n  // send to mobile\n  dispatch({ type: PersonActionTypes.SET_PERSON_INFO });\n  SystemCore.send({\n    command: 'set-person-info',\n    value: value,\n  })\n    .then((res) => {\n      dispatch({\n        type: PersonActionTypes.SET_PERSON_INFO_SUCCESS,\n        payload: value,\n      });\n      return callback?.('success');\n    })\n    .catch((err) => {\n      dispatch({ type: PersonActionTypes.SET_PERSON_INFO_FAIL, payload: err });\n      return callback?.();\n    });\n};\n\nconst setTransactionList = (transactionList) => async (dispatch) => {\n  return dispatch(\n    createAccount(PersonActionTypes.SET_TRANSACTION_LIST, transactionList),\n  );\n};\n\nexport const getTransactionList = () => async (dispatch) => {\n  const ListTransaction = [];\n  dispatch(setTransactionList(ListTransaction));\n};\n\nexport const setItemTransaction =\n  (transaction, callback) => async (dispatch) => {\n    dispatch(createAction(PersonActionTypes.SET_ITEM_TRANSACTION, transaction));\n    callback?.();\n    return;\n  };\n\nexport const setShowAvatar = (isShow) => async (dispatch) => {\n  return dispatch(createAction(PersonActionTypes.SET_SHOW_AVATAR, isShow));\n};\n","import { PersonActionTypes } from './action';\n\nconst initState = {\n  personInfo: {},\n  status: 0,\n  transaction_list: [],\n  errorSetPersonInfo: '',\n  statusSetPersonInfo: -1,\n};\n\nexport default function personReducer(state = initState, action) {\n  switch (action.type) {\n    case PersonActionTypes.GET_PERSON_INFO:\n      return {\n        ...state,\n        status: 0,\n      };\n    case PersonActionTypes.GET_PERSON_INFO_SUCCESS:\n      return {\n        ...state,\n        personInfo: action.payload.data,\n        status: 1,\n      };\n    case PersonActionTypes.SET_PERSON_INFO:\n      return {\n        ...state,\n        statusSetPersonInfo: 0,\n      };\n    case PersonActionTypes.SET_PERSON_INFO_SUCCESS:\n      return {\n        ...state,\n        personInfo: action.payload,\n        statusSetPersonInfo: 1,\n      };\n    case PersonActionTypes.SET_PERSON_INFO_FAIL:\n      return {\n        ...state,\n        errorSetPersonInfo: action.payload,\n        statusSetPersonInfo: 2,\n      };\n    case PersonActionTypes.SET_TRANSACTION_LIST:\n      return {\n        ...state,\n        transaction_list: [...action.payload],\n      };\n\n    case PersonActionTypes.SET_ITEM_TRANSACTION:\n      return {\n        ...state,\n        transaction_list: [action.payload, ...state.transaction_list],\n      };\n\n    case PersonActionTypes.SET_SHOW_AVATAR:\n      return {\n        ...state,\n        personInfo: { ...state.personInfo, show_avatar: action.payload },\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SystemCore } from '@@packages/core';\nimport createAction from '../action';\n\nexport const WalletActionTypes = Object.freeze({\n  GET_WALLET_INFO: 'GET_WALLET_INFO',\n  GET_WALLET_INFO_SUCCESS: 'GET_WALLET_INFO_SUCCESS',\n  GET_WALLET_INFO_FAIL: 'GET_WALLET_INFO_FAIL',\n  GET_WALLET_BALANCE: 'GET_WALLET_BALANCE',\n  GET_WALLET_BALANCE_SUCCESS: 'GET_WALLET_BALANCE_SUCCESS',\n  GET_WALLET_BALANCE_FAIL: 'GET_WALLET_BALANCE_FAIL',\n\n  SET_WALLET_SELECT_IN_WALLET: 'SET_WALLET_SELECT_IN_WALLET',\n\n  SET_WALLET_SELECT_VIEW_DETAIL: 'SET_WALLET_SELECT_VIEW_DETAIL',\n\n  UPDATE_ENVIRON_WALLET: 'UPDATE_ENVIRON_WALLET',\n\n  UPDATE_WALLET_NAME: 'UPDATE_WALLET_NAME',\n\n  SET_WALLET_DEFAULT: 'SET_WALLET_DEFAULT',\n\n  SET_MY_DEFAULT_TOKEN: 'SET_MY_DEFAULT_TOKEN',\n\n  DELETE_WALLET: 'DELETE_WALLET',\n\n  UPDATE_WALLET_DATA: 'UPDATE_WALLET_DATA',\n});\n\nexport function getWalletInfo(dispatch, getState) {\n  dispatch({ type: WalletActionTypes.GET_WALLET_INFO });\n  SystemCore.send({\n    command: 'get-wallet',\n  })\n    .then((res) => {\n      dispatch({\n        type: WalletActionTypes.GET_WALLET_INFO_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: WalletActionTypes.GET_WALLET_INFO_FAIL, payload: err });\n    });\n}\n\nexport const getBalanceWallet = (listWallet) => async (dispatch) => {\n  dispatch({ type: WalletActionTypes.GET_WALLET_BALANCE });\n  SystemCore.send({\n    command: 'get-balance-wallet',\n    value: {\n      wallets: listWallet,\n    },\n  })\n    .then((res) => {\n      dispatch({\n        type: WalletActionTypes.GET_WALLET_BALANCE_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: WalletActionTypes.GET_WALLET_BALANCE_FAIL,\n        payload: err,\n      });\n    });\n};\n\n// export async function getWalletInfo(dispatch) {\n//   const result = [\n//     {\n//       address: '0x32-characters-Kaa,a,CCsmskaCCsmska1',\n//       balance: 1000,\n//       pendingBalance: 100,\n//       name: '@Meta 1',\n//       unit: 'unit',\n//       is_default: true,\n//       token_default: { name: 'Metadot', value: 'MTD', total: 1000 },\n//       list_token: [\n//         { name: 'Metadot', value: 'MTD', total: 1000 },\n//         { name: 'Bitcoin', value: 'BTC', total: 10 },\n//       ],\n//       environment: 'MainNet',\n//     },\n//     {\n//       address: '0x32-characters-Kaa,a,CCsmskaCCsmska2',\n//       balance: 1000,\n//       pendingBalance: 100,\n//       name: '@Meta 2',\n//       is_default: false,\n//       unit: 'unit',\n//       token_default: { name: 'Metadot', value: 'MTD', total: 1000 },\n//       list_token: [{ name: 'Metadot', value: 'MTD', total: 1000 }],\n//       environment: 'MainNet',\n//     },\n//     {\n//       address: '0x32-characters-Kaa,a,CCsmskaCCsmska3',\n//       balance: 1000,\n//       pendingBalance: 100,\n//       name: '@Meta 3',\n//       unit: 'unit',\n//       is_default: false,\n//       token_default: { name: 'Metadot', value: 'MTD', total: 1000 },\n//       list_token: [{ name: 'Metadot', value: 'MTD', total: 1000 }],\n//       environment: 'MainNet',\n//     },\n//     {\n//       address: '0x32-characters-Kaa,a,CCsmskaCCsmska4',\n//       balance: 1000,\n//       pendingBalance: 100,\n//       name: '@Meta 4',\n//       is_default: false,\n//       unit: 'unit',\n//       token_default: { name: 'Metadot', value: 'MTD', total: 1000 },\n//       list_token: [{ name: 'Metadot', value: 'MTD', total: 1000 }],\n//       environment: 'MainNet',\n//     },\n//   ];\n\n//   dispatch(createAction(WalletActionTypes.GET_WALLET_INFO_SUCCESS, result));\n\n//   // call deriver\n//   // SystemCore.send('info', {\n//   //   command: 'get-person-info',\n//   // })\n//   //   .then((res) => {\n//   //     dispatch(createAction(WalletActionTypes.GET_WALLET_INFO_SUCCESS, res));\n//   //   })\n//   //   .catch((err) => {\n//   //     dispatch(createAction(WalletActionTypes.GET_WALLET_INFO_FAIL, err));\n//   //   });\n// }\n\nexport const setWalletSelectInWallet = (wallet) => async (dispatch) => {\n  return dispatch(\n    createAction(WalletActionTypes.SET_WALLET_SELECT_IN_WALLET, wallet),\n  );\n};\nexport const updateWallet = (wallet) => async (dispatch) => {\n  dispatch({\n    type: WalletActionTypes.UPDATE_WALLET_DATA,\n    payload: wallet,\n  });\n};\n\nexport const setWalletSelectViewDetail =\n  (wallet, callBack) => async (dispatch) => {\n    dispatch(\n      createAction(WalletActionTypes.SET_WALLET_SELECT_VIEW_DETAIL, wallet),\n    );\n    return callBack?.();\n  };\n\nexport const updateEnvironWallet = (value, callBack) => async (dispatch) => {\n  dispatch(createAction(WalletActionTypes.UPDATE_ENVIRON_WALLET, value));\n  return;\n};\n\nexport const updateWalletName = (wallet, callBack) => async (dispatch) => {\n  dispatch(createAction(WalletActionTypes.UPDATE_WALLET_NAME, wallet));\n  return callBack?.();\n};\n\nexport const setWalletDefault = (wallet, callBack) => async (dispatch) => {\n  dispatch(createAction(WalletActionTypes.SET_WALLET_DEFAULT, wallet));\n  return callBack?.();\n};\n\nexport const setMyDefaultToken = (wallet, callBack) => async (dispatch) => {\n  dispatch(createAction(WalletActionTypes.SET_MY_DEFAULT_TOKEN, wallet));\n  return callBack?.();\n};\n\nexport const deleteWallet = (address, callBack) => async (dispatch) => {\n  dispatch(createAction(WalletActionTypes.DELETE_WALLET, address));\n  return callBack?.();\n};\n","import { WalletActionTypes } from './action';\n\nconst initState = {\n  statusGetWallet: -1,\n  walletInfo: [],\n  walletSelectInWallet: {},\n  walletSelectViewDetail: {},\n  list_token: [{ name: 'MTD', value: 'MTD', total: 1000 }],\n};\n\nconst handleUpdateEnvironWallet = (value, walletInfo) => {\n  return walletInfo?.map((elm) => {\n    if (elm.address === value.address) {\n      return {\n        ...elm,\n        environment: value.environment,\n      };\n    } else {\n      return elm;\n    }\n  });\n};\n\nconst handleUpdateWalletName = (wallet, walletInfo) => {\n  return walletInfo?.map((elm) => {\n    if (elm.address === wallet.address) {\n      return {\n        ...elm,\n        name: wallet.name,\n      };\n    } else {\n      return elm;\n    }\n  });\n};\n\nconst handleSetWalletDefault = (wallet, walletInfo) => {\n  return walletInfo?.map((elm) => {\n    if (elm.address === wallet) {\n      return {\n        ...elm,\n        is_default: true,\n      };\n    } else {\n      return {\n        ...elm,\n        is_default: false,\n      };\n    }\n  });\n};\n\nconst handleSetTokenDefaultWallet = (wallet, walletInfo) => {\n  return walletInfo?.map((elm) => {\n    if (elm.address === wallet.address) {\n      return {\n        ...elm,\n        token_default: wallet.token,\n      };\n    } else {\n      return elm;\n    }\n  });\n};\n\nconst handleDeleteWallet = (address, walletInfo) => {\n  return walletInfo.filter((elm) => elm.address !== address);\n};\n\nexport default function walletReducer(state = initState, action) {\n  switch (action.type) {\n    case WalletActionTypes.GET_WALLET_INFO:\n      return {\n        ...state,\n        statusGetWallet: 0,\n      };\n    case WalletActionTypes.GET_WALLET_INFO_SUCCESS: {\n      const payloadData = action.payload.data;\n      return {\n        ...state,\n        statusGetWallet: 1,\n        walletInfo: Array.isArray(payloadData.data)\n          ? [...action.payload.data.data]\n          : [...state.walletInfo],\n        walletSelectInWallet:\n          Object.keys(state.walletSelectInWallet).length > 0\n            ? state.walletSelectInWallet\n            : action.payload.data.data.length > 0\n            ? action.payload.data.data[0]\n            : {},\n      };\n    }\n    case WalletActionTypes.UPDATE_WALLET_DATA: {\n      const currentWalletInfo = [...state.walletInfo];\n      const walletUpdate = action.payload.data.data;\n      const indexUpdate = currentWalletInfo.findIndex(\n        (e) => e.address === walletUpdate.address,\n      );\n      currentWalletInfo[indexUpdate] = walletUpdate;\n      return {\n        ...state,\n        walletInfo: [...currentWalletInfo],\n      };\n    }\n    case WalletActionTypes.GET_WALLET_INFO_FAIL:\n      return {\n        ...state,\n        statusGetWallet: 2,\n      };\n    case WalletActionTypes.GET_WALLET_BALANCE:\n      return {\n        ...state,\n      };\n    case WalletActionTypes.GET_WALLET_BALANCE_SUCCESS:\n      return {\n        ...state,\n      };\n    case WalletActionTypes.GET_WALLET_BALANCE_FAIL:\n      return {\n        ...state,\n      };\n\n    case WalletActionTypes.SET_WALLET_SELECT_IN_WALLET:\n      return { ...state, walletSelectInWallet: { ...action.payload } };\n\n    case WalletActionTypes.SET_WALLET_SELECT_VIEW_DETAIL:\n      return { ...state, walletSelectViewDetail: { ...action.payload } };\n\n    case WalletActionTypes.UPDATE_ENVIRON_WALLET:\n      return {\n        ...state,\n        walletInfo: [\n          ...handleUpdateEnvironWallet(action.payload, state.walletInfo),\n        ],\n        walletSelectViewDetail: {\n          ...state.walletSelectViewDetail,\n          environment: action.payload.environment,\n        },\n      };\n\n    case WalletActionTypes.UPDATE_WALLET_NAME:\n      return {\n        ...state,\n        walletInfo: [\n          ...handleUpdateWalletName(action.payload, state.walletInfo),\n        ],\n        walletSelectViewDetail: {\n          ...state.walletSelectViewDetail,\n          name: action.payload.name,\n        },\n      };\n\n    case WalletActionTypes.SET_WALLET_DEFAULT:\n      return {\n        ...state,\n        walletInfo: [\n          ...handleSetWalletDefault(action.payload, state.walletInfo),\n        ],\n        walletSelectViewDetail: {\n          ...state.walletSelectViewDetail,\n          is_default: true,\n        },\n      };\n\n    case WalletActionTypes.SET_MY_DEFAULT_TOKEN:\n      return {\n        ...state,\n        walletInfo: [\n          ...handleSetTokenDefaultWallet(action.payload, state.walletInfo),\n        ],\n        walletSelectViewDetail: {\n          ...state.walletSelectViewDetail,\n          token_default: action.payload.token,\n        },\n      };\n\n    case WalletActionTypes.DELETE_WALLET:\n      return {\n        ...state,\n        walletInfo: [...handleDeleteWallet(action.payload, state.walletInfo)],\n        walletSelectViewDetail: {},\n        walletSelectInWallet:\n          state.walletSelectInWallet?.address === action.payload\n            ? {}\n            : state.walletSelectInWallet,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SystemCore } from '@@packages/core';\nimport createAction from '../action';\n\nexport const SettingActionTypes = Object.freeze({\n  GET_SETTING_APP: 'GET_SETTING_APP',\n  GET_SETTING_APP_SUCCESS: 'GET_SETTING_APP_SUCCESS',\n  GET_SETTING_APP_FAIL: 'GET_SETTING_APP_FAIL',\n\n  SETTING_STATUS_NOTIFY: 'SETTING_STATUS_NOTIFY',\n  SETTING_STATUS_NOTIFY_SUCCESS: 'SETTING_STATUS_NOTIFY_SUCCESS',\n  SETTING_STATUS_NOTIFY_FAIL: 'SETTING_STATUS_NOTIFY_FAIL',\n\n  SET_ROW_BOTTOM_SHEET: 'SET_ROW_BOTTOM_SHEET',\n});\n\nexport const setStatusNotify = (value) => (dispatch) => {\n  dispatch({ type: SettingActionTypes.SETTING_STATUS_NOTIFY });\n  SystemCore.send({\n    \"command\": 'set-status-notification',\n    \"value\": value,\n  })\n  .then((res) => {\n    dispatch({ type: SettingActionTypes.SETTING_STATUS_NOTIFY_SUCCESS, payload: res });\n  })\n  .catch((err) => {\n    dispatch({ type: SettingActionTypes.SETTING_STATUS_NOTIFY_FAIL, payload: err });\n  });\n};\n\n\nexport function getSettingApp(dispatch) {\n  dispatch({ type: SettingActionTypes.GET_SETTING_APP });\n  SystemCore.send({\n    command: 'get-my-setting',\n  })\n    .then((res) => {\n      dispatch(createAction(SettingActionTypes.GET_SETTING_APP_SUCCESS, res));\n    })\n    .catch((err) => {\n      dispatch(createAction(SettingActionTypes.GET_SETTING_APP_FAIL, err));\n    });\n}\n\n\nexport const setRowBottomSheet = (number) => async (dispatch) => {\n  return dispatch(\n    createAction(SettingActionTypes.SET_ROW_BOTTOM_SHEET, number),\n  );\n};\n","import { SettingActionTypes } from './action';\n\nconst initState = {\n  row_bottomSheet: 0,\n  statusGetSettingApp: undefined,\n  errorGetSettingApp: \"\",\n  mySettingApp: {},\n\n  statusSetNofifyActive: undefined,\n  errorSetNofifyActive: undefined,\n};\n\nexport default function settingReducer(state = initState, action) {\n  switch (action.type) {\n    case SettingActionTypes.GET_SETTING_APP:\n      return { ...state, statusGetSettingApp: 0, errorGetSettingApp: \"\" };\n    case SettingActionTypes.GET_SETTING_APP_SUCCESS:\n      return { ...state, statusGetSettingApp: 1, mySettingApp: {...action.payload.data}};\n    case SettingActionTypes.GET_SETTING_APP_FAIL:\n      return { ...state, statusGetSettingApp: 2, mySettingApp: {}, errorGetSettingApp: action.payload.message };\n    case SettingActionTypes.SETTING_STATUS_NOTIFY:\n      return { ...state, statusSetNofifyActive: 0, errorSetNofifyActive: \"\" };\n    case SettingActionTypes.SETTING_STATUS_NOTIFY_SUCCESS:\n      return { ...state, statusSetNofifyActive: 1, mySettingApp: {...state.mySettingApp, ...action.payload.data}};\n    case SettingActionTypes.SETTING_STATUS_NOTIFY_FAIL:\n      return { ...state, statusSetNofifyActive: 2, errorSetNofifyActive: action.payload.message, mySettingApp: {...state.mySettingApp} };\n    case SettingActionTypes.SET_ROW_BOTTOM_SHEET:\n      return { ...state, row_bottomSheet: action.payload };\n    default:\n      return { ...state };\n  }\n}\n","import { SystemCore } from '@@packages/core';\nimport createAction from '../action';\n\nexport const CreateWalletActionTypes = Object.freeze({\n  GET_AUTO_GEN_LIST: 'GET_AUTO_GEN_LIST',\n  GET_AUTO_GEN_LIST_SUCCESS: 'GET_AUTO_GEN_LIST_SUCCESS',\n  GET_AUTO_GEN_LIST_FAIL: 'GET_AUTO_GEN_LIST_FAIL',\n  GET_LIST_CONFIRM: 'GET_LIST_CONFIRM',\n  GET_LIST_CONFIRM_SUCCESS: 'GET_LIST_CONFIRM_SUCCESS',\n  GET_LIST_CONFIRM_FAIL: 'GET_LIST_CONFIRM_FAIL',\n  CREATE_WALLET: 'CREATE_WALLET',\n  CREATE_WALLET_SUCCESS: 'CREATE_WALLET_SUCCESS',\n  CREATE_WALLET_FAIL: 'CREATE_WALLET_FAIL',\n  RESET_STATE: 'RESET_STATE',\n  RESET_STATUS_CREATE_WALLET: 'RESET_STATUS_CREATE_WALLET',\n  CLEAR_RAW_SEED_CONFIRM: 'CLEAR_RAW_SEED_CONFIRM',\n});\n\nexport function getAutoGenListOriginal(dispatch) {\n  dispatch({ type: CreateWalletActionTypes.GET_AUTO_GEN_LIST });\n  SystemCore.send({\n    command: 'get-raw-seed',\n  })\n    .then((res) => {\n      dispatch({\n        type: CreateWalletActionTypes.GET_AUTO_GEN_LIST_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: CreateWalletActionTypes.GET_AUTO_GEN_LIST_FAIL,\n        payload: err,\n      });\n    });\n}\n\nexport function getAutoGenListConfirm(dispatch) {\n  dispatch({ type: CreateWalletActionTypes.GET_LIST_CONFIRM });\n  SystemCore.send({\n    command: 'get-seed-phrase-confirm',\n  })\n    .then((res) => {\n      dispatch({\n        type: CreateWalletActionTypes.GET_LIST_CONFIRM_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: CreateWalletActionTypes.GET_LIST_CONFIRM_FAIL,\n        payload: err,\n      });\n    });\n}\n\nexport function clearSeedPhraseConfirm(dispatch) {\n  dispatch({ type: CreateWalletActionTypes.CLEAR_RAW_SEED_CONFIRM });\n}\n\nexport const createWallet = (value) => async (dispatch) => {\n  dispatch({ type: CreateWalletActionTypes.CREATE_WALLET });\n  return SystemCore.send({\n    command: 'create-wallet',\n    value: value.isCustom\n      ? value.customData\n      : {\n          'raw-seed-confirm-selected': value,\n        },\n  })\n    .then((res) => {\n      dispatch({\n        type: CreateWalletActionTypes.CREATE_WALLET_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: CreateWalletActionTypes.CREATE_WALLET_FAIL,\n        payload: err,\n      });\n    });\n};\n\nconst setAutoGenConfirmFail = (value) => async (dispatch) => {\n  dispatch(\n    createAction(CreateWalletActionTypes.SET_AUTO_GEN_CONFIRM_FAIL, value),\n  );\n  return;\n};\n\nexport const submitAutoGenListConfirm =\n  (autoGenList, callback) => async (dispatch) => {\n    const result = (Math.random() * 100).toString().substring(0, 2);\n    const isErrorConfirm = result % 2 === 0;\n\n    setTimeout(() => {\n      if (isErrorConfirm) {\n        dispatch(setAutoGenConfirmFail(true));\n        callback?.();\n        return;\n      }\n      dispatch(setAutoGenConfirmFail(false));\n      callback?.('success');\n    }, 1000);\n\n    // call deriver\n    // SystemCore.send('confirm-seedPhrase', {\n    //   payload: autoGenList,\n    // });\n    return;\n  };\n\nexport const resetState = (callback) => async (dispatch) => {\n  dispatch(createAction(CreateWalletActionTypes.RESET_STATE));\n  callback?.();\n  return;\n};\n\nexport const resetStatusCreateWallet = (callback) => async (dispatch) => {\n  dispatch(createAction(CreateWalletActionTypes.RESET_STATUS_CREATE_WALLET));\n  callback?.();\n  return;\n};\n","import { CreateWalletActionTypes } from './action';\n\nconst initState = {\n  listSeedPhrase: [],\n  listSeedPhraseConfirm: [],\n  errorGetSeedPhrase: '',\n  errorGetSeedPhraseConfirm: '',\n  statusGetSeedPharseAuto: 0,\n  statusGetSeedPhareConfirm: 0,\n  walletCreated: {},\n  statusCreateWallet: -1,\n  errorCreateWallet: '',\n};\n\nexport default function createWalletReducer(state = initState, action) {\n  switch (action.type) {\n    case CreateWalletActionTypes.CLEAR_RAW_SEED_CONFIRM:\n      return {\n        ...state,\n        listSeedPhraseConfirm: [],\n      };\n    case CreateWalletActionTypes.GET_AUTO_GEN_LIST:\n      return {\n        ...state,\n        statusGetSeedPharseAuto: 0,\n        errorGetSeedPhrase: '',\n      };\n    case CreateWalletActionTypes.GET_AUTO_GEN_LIST_SUCCESS:\n      return {\n        ...state,\n        listSeedPhrase: [...action.payload.data],\n        statusGetSeedPharseAuto: 1,\n      };\n    case CreateWalletActionTypes.GET_AUTO_GEN_LIST_FAIL:\n      return {\n        ...state,\n        statusGetSeedPharseAuto: 2,\n        errorGetSeedPhrase: action.payload,\n      };\n    case CreateWalletActionTypes.GET_LIST_CONFIRM:\n      return {\n        ...state,\n        statusGetSeedPhareConfirm: 0,\n        errorGetSeedPhraseConfirm: '',\n      };\n    case CreateWalletActionTypes.GET_LIST_CONFIRM_SUCCESS:\n      return {\n        ...state,\n        listSeedPhraseConfirm: action.payload.data,\n        statusGetSeedPhareConfirm: 1,\n      };\n    case CreateWalletActionTypes.GET_LIST_CONFIRM_FAIL:\n      return {\n        ...state,\n        statusGetSeedPhareConfirm: 2,\n        errorGetSeedPhraseConfirm: action.payload,\n      };\n    case CreateWalletActionTypes.CREATE_WALLET:\n      return {\n        ...state,\n        statusCreateWallet: 0,\n        errorCreateWallet: '',\n        walletCreated: {},\n      };\n    case CreateWalletActionTypes.CREATE_WALLET_SUCCESS:\n      return {\n        ...state,\n        walletCreated: { ...action.payload },\n        statusCreateWallet: 1,\n      };\n    case CreateWalletActionTypes.CREATE_WALLET_FAIL:\n      return {\n        ...state,\n        statusCreateWallet: 2,\n        errorCreateWallet: action.payload,\n      };\n    // case CreateWalletActionTypes.SET_AUTO_GEN_LIST_CONFIRM:\n    //   return {\n    //     ...state,\n    //     seedPhraseConfirm: {\n    //       ...state.seedPhraseConfirm,\n    //       listSeedPhraseConfirm: action.payload.data,\n    //     },\n    //   };\n\n    // case CreateWalletActionTypes.SET_AUTO_GEN_CONFIRM_FAIL:\n    //   return {\n    //     ...state,\n    //     seedPhraseConfirm: {\n    //       ...state.seedPhraseConfirm,\n    //       isErrorConfirm: action.payload,\n    //     },\n    //   };\n\n    case CreateWalletActionTypes.RESET_STATE:\n      return {\n        ...state,\n        listSeedPhrase: [],\n        seedPhraseConfirm: {\n          listSeedPhraseConfirm: [],\n          isErrorConfirm: false,\n        },\n      };\n    case CreateWalletActionTypes.RESET_STATUS_CREATE_WALLET:\n      return {\n        ...state,\n        walletCreated: {},\n        statusCreateWallet: -1,\n      };\n    default:\n      return { ...state };\n  }\n}\n","import { SystemCore } from '@@packages/core';\nimport createAction from '../action';\n\nexport const sendingCoinActionTypes = Object.freeze({\n  SET_TRANSACTION_DETAIL: 'SET_TRANSACTION_DETAIL',\n  SET_HISTORY_SENDING_COIN: 'SET_HISTORY_SENDING_COIN',\n  SET_WALLET_RECEIVE_COIN: 'SET_WALLET_RECEIVE_COIN',\n  DELETE_WALLET_RECEIVE_COIN: 'DELETE_WALLET_RECEIVE_COIN',\n  SET_SENDING_COIN_DETAIL: 'SET_SENDING_COIN_DETAIL',\n  DELETE_SENDING_COIN_DETAIL: 'DELETE_SENDING_COIN_DETAIL',\n  SET_OTP_SENDING: 'SET_OTP_SENDING',\n  DELETE_OTP_SENDING: 'DELETE_OTP_SENDING',\n\n  SEND_TRANSACTION: 'SEND_TRANSACTION',\n  SEND_TRANSACTION_SUCCESS: 'SEND_TRANSACTION_SUCCESS',\n  SEND_TRANSACTION_FAIL: 'SEND_TRANSACTION_FAIL',\n\n  GET_WHITE_LIST: 'GET_WHITE_LIST',\n  GET_WHITE_LIST_SUCCESS: 'GET_WHITE_LIST_SUCCESS',\n  GET_WHITE_LIST_FAIL: 'GET_WHITE_LIST_FAIL',\n});\n\n// const setHistorySendingCoin = (list) => async (dispatch) => {\n//   return dispatch(\n//     createAction(sendingCoinActionTypes.SET_HISTORY_SENDING_COIN, list),\n//   );\n// };\n\nexport const getHistorySendingCoin =\n  (data = {}) =>\n  (dispatch) => {\n    dispatch({ type: sendingCoinActionTypes.GET_WHITE_LIST });\n    SystemCore.send({\n      command: 'get-white-list-pagination',\n      value: {\n        page: data.page || 1,\n        limit: data.limit || 10,\n      },\n    })\n      .then((res) => {\n        dispatch({\n          type: sendingCoinActionTypes.GET_WHITE_LIST_SUCCESS,\n          payload: res,\n        });\n      })\n      .catch((err) => {\n        dispatch({\n          type: sendingCoinActionTypes.GET_WHITE_LIST_FAIL,\n          payload: err,\n        });\n      });\n  };\n\n// export const getHistorySendingCoin = (callback) => async (dispatch) => {\n//   // SystemCore.send('get-history-sending-coin');\n//   const ListHistorySenCoin = [\n//     {\n//       id: 1,\n//       img: '',\n//       name: 'Eric R Hopper',\n//       \"user-name\": '@Eric R Hopper',\n//       wallet: '0x32-characters-Kaa,a,CCsmskaCCsmska3',\n//       total: 200,\n//     },\n//     {\n//       id: 2,\n//       img: '',\n//       name: 'Dao Duy Manh',\n//       \"user-name\": 'duymanh',\n//       wallet: '0x32-characters-Kaa,a,CCsmskaCCsmska3',\n//       total: 20,\n//     },\n//     {\n//       id: 3,\n//       img: '',\n//       name: 'Nguyen Thanh Danh',\n//       \"user-name\": 'thanhdanh',\n//       wallet: '0x32-characters-Kaa,a,CCsmskaCCsmska1',\n//       total: 400,\n//     },\n//     {\n//       id: 4,\n//       img: '',\n//       name: 'Le Cong Phuong',\n//       \"user-name\": 'lecongphuong',\n//       wallet: '0x32-characters-Kaa,a,CCsmskaCCsmska2',\n//       total: 190,\n//     },\n//   ];\n\n//   setTimeout(() => {\n//     callback?.();\n//     return dispatch(setHistorySendingCoin(ListHistorySenCoin));\n//   }, 1000);\n// };\n\nexport const setWalletReceiveCoin = (wallet, callback) => async (dispatch) => {\n  dispatch(\n    createAction(sendingCoinActionTypes.SET_WALLET_RECEIVE_COIN, wallet),\n  );\n\n  return callback?.();\n};\n\nexport const deleteWalletReceiveCoin = () => async (dispatch) => {\n  return dispatch(\n    createAction(sendingCoinActionTypes.DELETE_WALLET_RECEIVE_COIN),\n  );\n};\n\nexport const setSendingCoinDetail = (detail, callback) => async (dispatch) => {\n  dispatch(\n    createAction(sendingCoinActionTypes.SET_SENDING_COIN_DETAIL, detail),\n  );\n  callback?.();\n  return;\n};\nexport const setTransactionDetail = (data) => (dispatch) => {\n  dispatch(createAction(sendingCoinActionTypes.SET_TRANSACTION_DETAIL, data));\n};\n\nexport const deleteSendCoinDetail = (callback) => async (dispatch) => {\n  dispatch(createAction(sendingCoinActionTypes.DELETE_SENDING_COIN_DETAIL));\n  callback?.();\n  return;\n};\n\nexport const pushSendCoinToMobile = (detail) => (dispatch) => {\n  dispatch({ type: sendingCoinActionTypes.SEND_TRANSACTION });\n  SystemCore.send({\n    command: 'send-transaction',\n    value: detail,\n  })\n    .then((res) => {\n      dispatch({\n        type: sendingCoinActionTypes.SEND_TRANSACTION_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: sendingCoinActionTypes.SEND_TRANSACTION_FAIL,\n        payload: err,\n      });\n    });\n  // const OPT = (Math.random() * 100000).toString().substring(0, 4);\n  // dispatch(createAction(sendingCoinActionTypes.SET_OTP_SENDING, OPT));\n  // return;\n};\n","import { sendingCoinActionTypes } from './action';\n\nconst initState = {\n  list_sending_coin_history: [],\n  wallet_Receive_Coin: {},\n  list_token_in_person: [],\n  sending_coin_detail: {},\n  opt_sending: '',\n\n  statusSendTransaction: 0,\n\n  statusGetWhiteList: 0,\n  errorGetWhiteList: '',\n  whiteListData: [],\n\n  transactionDetail: {},\n};\n\nexport default function sendingCoinReducer(state = initState, action) {\n  switch (action.type) {\n    case sendingCoinActionTypes.SET_TRANSACTION_DETAIL:\n      return { ...state, transactionDetail: { ...action.payload } };\n\n    case sendingCoinActionTypes.SET_HISTORY_SENDING_COIN:\n      return { ...state, list_sending_coin_history: [...action.payload] };\n    case sendingCoinActionTypes.SET_WALLET_RECEIVE_COIN:\n      return { ...state, wallet_Receive_Coin: action.payload };\n\n    case sendingCoinActionTypes.SEND_TRANSACTION:\n      return { ...state, statusSendTransaction: 0 };\n    case sendingCoinActionTypes.SEND_TRANSACTION_SUCCESS:\n      return { ...state, statusSendTransaction: 1 };\n    case sendingCoinActionTypes.SEND_TRANSACTION_FAIL:\n      return { ...state, statusSendTransaction: 2 };\n\n    case sendingCoinActionTypes.GET_WHITE_LIST:\n      return { ...state, statusGetWhiteList: 0, errorGetWhiteList: '' };\n    case sendingCoinActionTypes.GET_WHITE_LIST_SUCCESS:\n      return {\n        ...state,\n        statusGetWhiteList: 1,\n        whiteListData: action.payload.data.data,\n      };\n    case sendingCoinActionTypes.GET_WHITE_LIST_FAIL:\n      return {\n        ...state,\n        statusGetWhiteList: 2,\n        errorGetWhiteList: action.payload,\n      };\n\n    case sendingCoinActionTypes.DELETE_WALLET_RECEIVE_COIN:\n      return { ...state, wallet_Receive_Coin: {} };\n    case sendingCoinActionTypes.SET_LIST_TOKEN_ON_PERSON:\n      return { ...state, list_token_in_person: [...action.payload] };\n    case sendingCoinActionTypes.SET_SENDING_COIN_DETAIL:\n      return { ...state, sending_coin_detail: { ...action.payload } };\n    case sendingCoinActionTypes.DELETE_SENDING_COIN_DETAIL:\n      return { ...state, sending_coin_detail: {} };\n    case sendingCoinActionTypes.SET_OTP_SENDING:\n      return { ...state, opt_sending: action.payload };\n    case sendingCoinActionTypes.DELETE_OTP_SENDING:\n      return { ...state, opt_sending: '' };\n    default:\n      return { ...state };\n  }\n}\n","import { SystemCore } from '@@packages/core';\n\nexport const NodeManageActionTypes = Object.freeze({\n  GET_NODE_LIST: 'GET_NODE_LIST',\n  GET_NODE_LIST_SUCCESS: 'GET_NODE_LIST_SUCCESS',\n  GET_NODE_LIST_FAIL: 'GET_NODE_LIST_FAIL',\n  CONNECT_NODE: 'CONNECT_NODE',\n  CONNECT_NODE_SUCCESS: 'CONNECT_NODE_SUCCESS',\n  CONNECT_NODE_FAIL: 'CONNECT_NODE_FAIL',\n});\n\nexport function getNodes(dispatch) {\n  dispatch({ type: NodeManageActionTypes.GET_NODE_LIST });\n  SystemCore.send({\n    command: 'get-node',\n  })\n    .then((res) => {\n      dispatch({\n        type: NodeManageActionTypes.GET_NODE_LIST_SUCCESS,\n        payload: res,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: NodeManageActionTypes.GET_NODE_LIST_FAIL,\n        payload: err,\n      });\n    });\n}\nexport const connectNode = (listWallet, node, callback) => async (dispatch) => {\n  //   dispatch({ type: NodeManageActionTypes.CONNECT_NODE });\n\n  SystemCore.send({\n    command: 'connect-node',\n    value: {\n      wallets: listWallet,\n      node,\n    },\n  })\n    .then((res) => {\n      callback({ status: 0 });\n    })\n    .catch((err) => {\n      callback({ status: 1 });\n    });\n};\n","// import { act } from 'react-dom/test-utils';\nimport { NodeManageActionTypes } from './action';\n\nconst initState = {\n  listNode: [],\n  statusGetNode: -1,\n  errorGetNodeMessage: '',\n  statusConnectNode: -1,\n  errorConnectNodeMessage: '',\n};\n\nexport default function nodeManageReducer(state = initState, action) {\n  switch (action.type) {\n    case NodeManageActionTypes.GET_NODE_LIST:\n      return {\n        ...state,\n        statusGetNode: 0,\n        errorGetNodeMessage: '',\n      };\n    case NodeManageActionTypes.GET_NODE_LIST_SUCCESS:\n      return {\n        ...state,\n        statusGetNode: 1,\n        listNode: action.payload.data,\n      };\n    case NodeManageActionTypes.GET_NODE_LIST_FAIL:\n      return {\n        ...state,\n        statusGetNode: 2,\n        errorGetNodeMessage: action.payload,\n      };\n\n    case NodeManageActionTypes.CONNECT_NODE:\n      return {\n        ...state,\n        statusConnectNode: 0,\n        errorConnectNodeMessage: '',\n      };\n    case NodeManageActionTypes.CONNECT_NODE_SUCCESS:\n      return {\n        ...state,\n        statusConnectNode: 1,\n      };\n    case NodeManageActionTypes.CONNECT_NODE_FAIL:\n      return {\n        ...state,\n        statusConnectNode: 2,\n        errorConnectNodeMessage: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n}\n","export const NotificationControllerActionTypes = Object.freeze({\n  SET_MODAL_NOTI_VISIBLE: 'SET_MODAL_NOTI_VISIBLE',\n});\n\nexport const setNotificationBottom = (value) => (dispatch) => {\n  dispatch({\n    type: NotificationControllerActionTypes.SET_MODAL_NOTI_VISIBLE,\n    payload: value,\n  });\n};\n","import { NotificationControllerActionTypes } from './action';\n\nconst initState = {\n  isVisible: false,\n  contentNoti: {},\n};\n\nexport default function NotificationControllerReducer(\n  state = initState,\n  action,\n) {\n  switch (action.type) {\n    case NotificationControllerActionTypes.SET_MODAL_NOTI_VISIBLE: {\n      const payload = action.payload;\n      return {\n        ...state,\n        isVisible: payload.isVisible,\n        contentNoti: payload.contentNoti || {},\n      };\n    }\n    default:\n      return { ...state };\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// import { logger } from 'redux-logger';\nimport reducer from './Reducer/reducer';\nimport personReducer from './Person/reducer';\nimport walletReducer from './Wallet/reducer';\nimport settingReducer from './Setting/reducer';\nimport createWalletReducer from './CreateWallet/reducer';\nimport sendingCoinReducer from './SendingCoin/reducer';\nimport nodeManageReducer from './NodeManage/reducer';\nimport NotificationControllerReducer from './NotificationController/reducer';\n\nexport const rootReducer = combineReducers({\n  reducer,\n  personReducer,\n  walletReducer,\n  settingReducer,\n  createWalletReducer,\n  sendingCoinReducer,\n  nodeManageReducer,\n  NotificationControllerReducer,\n});\n\nconst middleware = [thunk];\n// if (process.env.NODE_ENV === 'development') {\n//   middleware.push(logger);\n// }\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\nexport default store;\n","import { rootReducer } from './store';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\n\nconst makeConfiguredStore = (reducer) =>\n  configureStore({\n    reducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: false,\n      }),\n  });\n\nconst makeStore = () => {\n  const isServer = typeof window === 'undefined';\n\n  if (isServer) {\n    return { store: makeConfiguredStore(rootReducer) };\n  } else {\n    // we need it only on client side\n    const { persistStore, persistReducer } = require('redux-persist');\n    const storage = require('redux-persist/lib/storage').default;\n\n    const persistConfig = {\n      key: 'app-women',\n      whitelist: ['languageRedux'], // make sure it does not clash with server keys\n      storage,\n      stateReconciler: autoMergeLevel2,\n      blackList: ['user'],\n    };\n\n    const persistedReducer = persistReducer(persistConfig, rootReducer);\n    const store = makeConfiguredStore(persistedReducer);\n    const persistor = persistStore(store);\n\n    return { store, persistor };\n  }\n};\n\nexport const store = makeStore();\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.store.dispatch;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// other module exports\nexport * from \"./CreateWallet/action\"\nexport * from \"./CreateWallet/reducer\"\nexport * from \"./NodeManage/action\"\nexport * from \"./NodeManage/reducer\"\nexport * from \"./NotificationController/action\"\nexport * from \"./NotificationController/reducer\"\nexport * from \"./Person/action\"\nexport * from \"./Person/reducer\"\nexport * from \"./Reducer/action\"\nexport * from \"./Reducer/reducer\"\nexport * from \"./SendingCoin/action\"\nexport * from \"./SendingCoin/reducer\"\nexport * from \"./Setting/action\"\nexport * from \"./Setting/reducer\"\nexport * from \"./Wallet/action\"\nexport * from \"./Wallet/reducer\"","import React from \"react\"\n\nconst Hide = () => {\n  return (\n    <svg\n      width=\"28\"\n      height=\"26\"\n      viewBox=\"0 0 28 26\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.5 25.5C5.36276 25.5 4.25106 25.1628 3.30547 24.531C2.35989 23.8991 1.6229 23.0011 1.1877 21.9504C0.752491 20.8998 0.638622 19.7436 0.860487 18.6282C1.08235 17.5128 1.62999 16.4883 2.43414 15.6841C3.23829 14.88 4.26284 14.3324 5.37823 14.1105C6.49362 13.8886 7.64976 14.0025 8.70043 14.4377C9.75111 14.8729 10.6491 15.6099 11.281 16.5555C11.9128 17.5011 12.25 18.6128 12.25 19.75C12.2474 21.2742 11.6407 22.7352 10.5629 23.8129C9.48518 24.8907 8.02419 25.4974 6.5 25.5ZM6.5 15.5C5.65943 15.5 4.83774 15.7493 4.13883 16.2163C3.43992 16.6833 2.89519 17.347 2.57351 18.1236C2.25184 18.9002 2.16768 19.7547 2.33167 20.5791C2.49565 21.4036 2.90043 22.1608 3.4948 22.7552C4.08917 23.3496 4.84645 23.7544 5.67087 23.9183C6.49529 24.0823 7.34982 23.9982 8.12641 23.6765C8.90299 23.3548 9.56675 22.8101 10.0337 22.1112C10.5007 21.4123 10.75 20.5906 10.75 19.75C10.75 18.6228 10.3022 17.5418 9.50521 16.7448C8.70818 15.9478 7.62717 15.5 6.5 15.5Z\"\n        fill=\"#04004D\"\n      />\n      <path\n        d=\"M21.5 25.5C20.3628 25.5 19.2511 25.1628 18.3055 24.531C17.3599 23.8991 16.6229 23.0011 16.1877 21.9504C15.7525 20.8998 15.6386 19.7436 15.8605 18.6282C16.0824 17.5128 16.63 16.4883 17.4341 15.6841C18.2383 14.88 19.2628 14.3324 20.3782 14.1105C21.4936 13.8886 22.6498 14.0025 23.7004 14.4377C24.7511 14.8729 25.6491 15.6099 26.281 16.5555C26.9128 17.5011 27.25 18.6128 27.25 19.75C27.2474 21.2742 26.6407 22.7352 25.5629 23.8129C24.4852 24.8907 23.0242 25.4974 21.5 25.5ZM21.5 15.5C20.6594 15.5 19.8377 15.7493 19.1388 16.2163C18.4399 16.6833 17.8952 17.347 17.5735 18.1236C17.2518 18.9002 17.1677 19.7547 17.3317 20.5791C17.4957 21.4036 17.9004 22.1608 18.4948 22.7552C19.0892 23.3496 19.8464 23.7544 20.6709 23.9183C21.4953 24.0823 22.3498 23.9982 23.1264 23.6765C23.903 23.3548 24.5668 22.8101 25.0337 22.1112C25.5007 21.4123 25.75 20.5906 25.75 19.75C25.75 18.6228 25.3022 17.5418 24.5052 16.7448C23.7082 15.9478 22.6272 15.5 21.5 15.5Z\"\n        fill=\"#04004D\"\n      />\n      <path d=\"M16.5 19H11.5V20.5H16.5V19Z\" fill=\"#04004D\" />\n      <path\n        d=\"M24.9201 11.5H3.08008L5.38008 0H22.6201L24.9201 11.5ZM4.92008 10H23.0801L21.3801 1.5H6.62008L4.92008 10Z\"\n        fill=\"#04004D\"\n      />\n      <path d=\"M28 10H0V11.5H28V10Z\" fill=\"#04004D\" />\n    </svg>\n  );\n};\n\nexport default Hide;\n","import { faClose, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Hide from \"@@packages/assets/icons/hide\";\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useHistory } from 'react-router-dom';\nimport { SystemCore } from '@@packages/core';\nimport { Animated } from 'react-animated-css';\n\nconst dataTab = [\n  {\n    id: 1,\n    open: true,\n    background: \"https://st.quantrimang.com/photos/image/2018/09/24/tien-ich-quan-ly-tab-moi-khac-biet-cho-chrome-va-firefox-1.jpg\",\n  },\n  {\n    id: 2,\n    open: true,\n    background: \"https://st.quantrimang.com/photos/image/2018/09/24/tien-ich-quan-ly-tab-moi-khac-biet-cho-chrome-va-firefox-1.jpg\",\n  },\n  {\n    id: 3,\n    open: false,\n  },\n  {\n    id: 4,\n    open: false,\n  },\n  {\n    id: 5,\n    open: false,\n  },\n  {\n    id: 6,\n    open: false,\n  },\n];\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(SystemCore.isReady);\n  const [tabs, setTabs] = useState([]);\n  const history = useHistory();\n\n  const onDeleteItem = (id) => {\n    setTabs(prev => prev.filter(item => {\n      return item.id !== id;\n    }));\n  };\n\n  const handleDeleteTab = (e, id) => {\n    e.stopPropagation();\n    console.log(\"should be delete\");\n    SystemCore.send({\n      command: 'close-tab',\n      value: {\n        id: id,\n      }\n    })\n      .then((res) => {\n        if(res.success){\n          onDeleteItem(id);\n        }\n      });\n  };\n\n  const handleGetTabs = () => {\n    console.log(\"get tab\");\n    SystemCore.send({\n      command: 'get-tabs',\n    })\n      .then((res) => {\n        console.log(\"get-tabs res\", res);\n        if(res.success) {\n          setTabs(res.data);\n        }\n      })\n      .catch((err) => {\n        console.log(\"get tab error\", JSON.stringify(err));\n      });\n  };\n\n  const _handleSystemReady = () => {\n    setIsReady(SystemCore.isReady);\n  };\n\n  useEffect(() => {\n    if (!SystemCore.isReady) {\n      SystemCore.on('ready', _handleSystemReady);\n      return;\n    }\n\n    return () => {\n      SystemCore.removeEventListener('ready', _handleSystemReady);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.log(isReady, 'core is ready ????');\n    if(isReady) {\n      handleGetTabs();\n    }\n  }, [isReady]);\n\n  const handleCreateTab = () => {\n    SystemCore.send({\n      command: 'new-tab',\n    })\n      .then((res) => {\n        if(res.success) {\n          setTabs(res.data);\n        }\n      })\n      .catch((err) => {});\n    SystemCore.send({\n      command: 'new-tab',\n    })\n  };\n\n  const handleChooseTab = (id) => {\n    console.log(\"should open tab\")\n    SystemCore.send({\n      command: \"choose-tab\",\n      value: {\n        id,\n      }\n    });\n  };\n\n  const HandleCloseAll = () => {\n    SystemCore.send({\n      command: \"close-all\"\n    }).then(res => {\n      if(res.success) {\n        setTabs([]);\n      }\n    });\n  };\n\n  const handleCloseBrowserTabs = (e) => {\n    SystemCore.send({\n      command: \"close-browser-tabs\"\n    });\n  };\n\n  return (\n    <Wrapper>\n      <Header>\n        <span className=\"close\" onClick={HandleCloseAll}>\n          Close All\n        </span>\n      </Header>\n      <Animated animationIn='fadeInRightCustom'>\n        <WrapContent className=\"content\">\n          <ListTab>\n            <AnimatePresence>\n              {tabs.map((item) => {\n                if (item.open) {\n                  return (\n                    <Tab\n                      layout\n                      bg={item.background}\n                      key={item.id}\n                      animate={{ scale: 1, opacity: 1 }}\n                      onClick={() => handleChooseTab(item.id)}\n                      exit={{ scale: 0, opacity: 0 }}>\n                      <div\n                        className=\"delete\"\n                        onClick={(e) => handleDeleteTab(e, item.id)}>\n                        <FontAwesomeIcon icon={faClose} />\n                      </div>\n                    </Tab>\n                  );\n                } else {\n                  return (\n                    <Tab\n                      layout\n                      className=\"text\"\n                      key={item.id}\n                      animate={{ scale: 1, opacity: 1 }}\n                      exit={{ scale: 0, opacity: 0 }}>\n                      www.metanode.co\n                      <div\n                        className=\"delete\"\n                        onClick={(e) => handleDeleteTab(e, item.id)}>\n                        <FontAwesomeIcon icon={faClose} />\n                      </div>\n                    </Tab>\n                  );\n                }\n              })}\n            </AnimatePresence>\n          </ListTab>\n        </WrapContent>\n      </Animated>\n      <Footer>\n        <Hide />\n        <div className=\"add\" onClick={handleCreateTab}>\n          <FontAwesomeIcon icon={faPlus} />\n        </div>\n        <div className=\"done\" onClick={handleCloseBrowserTabs}>\n          Done\n        </div>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nexport default App;\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  .content {\n    height: calc(100vh - 92px - 52px);\n    overflow: scroll;\n  }\n`;\nconst Header = styled.div`\n  padding: 15px 15px;\n  border-bottom: 1px solid #EDEEF0;\n  .close {\n    color: #FF0366;\n  }\n`;\nconst ListTab = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-top: 25px;\n`;\n\nconst Tab = styled(motion.div)`\n  position: relative;\n  width: calc(50% - 10px);\n  height: calc(50vw - 30px);\n  border-radius: 16px;\n  background: url(${({bg}) => bg});\n  background-size: cover;\n  object-fit: cover;\n  &.text {\n    background: #D3D7DB;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 700;\n    color: #4B5FFE;\n  }\n\n  .delete {\n    background: black;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 5px;\n    top: 5px;\n    z-index: 5;\n  }\n`;\nconst Footer =styled.div`\n    background: linear-gradient(69.33deg, rgba(255, 255, 255, 0.4) 11.73%, rgba(255, 255, 255, 0.4) 82.57%);\n    backdrop-filter: blur(25px);\n    height: 92px;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 20px;\n    .add {\n      width: 33px;\n      height: 33px;\n      border-radius: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: #000;\n      color: #fff;\n      font-size: 20px;\n    }\n    .done {\n      font-family: 'ClearSans';\n      font-weight: 700;\n      font-size: 16px;\n      line-height: 22px;\n      color: #04004D;\n    }\n`;\n\nconst WrapContent = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  flex-direction: column;\n  padding: ${({ fluid }) => (fluid ? '' : '0 20px')};\n  box-sizing: border-box;\n  background: #fdfdfd;\n  position: relative;\n  overflow: hidden;\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createRoot } from 'react-dom/client';\nimport { store } from '@@packages/redux';\nimport './index.css';\nimport './animation.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container as HTMLElement);\nroot.render(\n  <Provider store={store.store}>\n    <App />\n  </Provider>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["ProductActionTypes","Object","freeze","IS_CONNECT_DRIVER","SET_LOADING","REFRESH","initState","isConnect","isLoading","isReRefresh","INFO","EXIT","PERMISSION","name","Error","this","_listeners","on","bind","removeEventListener","emit","event","listener","push","filter","l","removeAllEventListeners","cbs","forEach","cb","args","receiveData","ready","tel","search","next","back","reload","share","globalWindow","window","waitUntil","command","Promise","resolve","interval","setInterval","clearInterval","sendMessageToFlutter","message","webkit","messageHandlers","callbackHandler","postMessage","JSON","stringify","console","log","core","_isReady","opener","_hasNotch","_subscribe","setStatusNotch","status","send","payload","isReady","SystemNotReadyError","res","_handleJsonStringMessage","response","data","success","_postMessageToWindow","exit","requestPermission","permission","option","error","RequestPermissionFailed","assign","_this","handleReceivedResponse","addEventListener","ev","platform","isSocket","stringData","isListen","parse","err","toString","PersonActionTypes","GET_PERSON_INFO","GET_PERSON_INFO_SUCCESS","GET_PERSON_INFO_FAIL","SET_PERSON_INFO","SET_PERSON_INFO_SUCCESS","SET_PERSON_INFO_FAIL","SET_ACCOUNT","SET_TRANSACTION_LIST","SET_ITEM_TRANSACTION","SET_SHOW_AVATAR","personInfo","transaction_list","errorSetPersonInfo","statusSetPersonInfo","WalletActionTypes","GET_WALLET_INFO","GET_WALLET_INFO_SUCCESS","GET_WALLET_INFO_FAIL","GET_WALLET_BALANCE","GET_WALLET_BALANCE_SUCCESS","GET_WALLET_BALANCE_FAIL","SET_WALLET_SELECT_IN_WALLET","SET_WALLET_SELECT_VIEW_DETAIL","UPDATE_ENVIRON_WALLET","UPDATE_WALLET_NAME","SET_WALLET_DEFAULT","SET_MY_DEFAULT_TOKEN","DELETE_WALLET","UPDATE_WALLET_DATA","statusGetWallet","walletInfo","walletSelectInWallet","walletSelectViewDetail","list_token","value","total","handleUpdateEnvironWallet","map","elm","address","environment","handleUpdateWalletName","wallet","handleSetWalletDefault","is_default","handleSetTokenDefaultWallet","token_default","token","handleDeleteWallet","SettingActionTypes","GET_SETTING_APP","GET_SETTING_APP_SUCCESS","GET_SETTING_APP_FAIL","SETTING_STATUS_NOTIFY","SETTING_STATUS_NOTIFY_SUCCESS","SETTING_STATUS_NOTIFY_FAIL","SET_ROW_BOTTOM_SHEET","row_bottomSheet","statusGetSettingApp","undefined","errorGetSettingApp","mySettingApp","statusSetNofifyActive","errorSetNofifyActive","CreateWalletActionTypes","GET_AUTO_GEN_LIST","GET_AUTO_GEN_LIST_SUCCESS","GET_AUTO_GEN_LIST_FAIL","GET_LIST_CONFIRM","GET_LIST_CONFIRM_SUCCESS","GET_LIST_CONFIRM_FAIL","CREATE_WALLET","CREATE_WALLET_SUCCESS","CREATE_WALLET_FAIL","RESET_STATE","RESET_STATUS_CREATE_WALLET","CLEAR_RAW_SEED_CONFIRM","listSeedPhrase","listSeedPhraseConfirm","errorGetSeedPhrase","errorGetSeedPhraseConfirm","statusGetSeedPharseAuto","statusGetSeedPhareConfirm","walletCreated","statusCreateWallet","errorCreateWallet","sendingCoinActionTypes","SET_TRANSACTION_DETAIL","SET_HISTORY_SENDING_COIN","SET_WALLET_RECEIVE_COIN","DELETE_WALLET_RECEIVE_COIN","SET_SENDING_COIN_DETAIL","DELETE_SENDING_COIN_DETAIL","SET_OTP_SENDING","DELETE_OTP_SENDING","SEND_TRANSACTION","SEND_TRANSACTION_SUCCESS","SEND_TRANSACTION_FAIL","GET_WHITE_LIST","GET_WHITE_LIST_SUCCESS","GET_WHITE_LIST_FAIL","list_sending_coin_history","wallet_Receive_Coin","list_token_in_person","sending_coin_detail","opt_sending","statusSendTransaction","statusGetWhiteList","errorGetWhiteList","whiteListData","transactionDetail","NodeManageActionTypes","GET_NODE_LIST","GET_NODE_LIST_SUCCESS","GET_NODE_LIST_FAIL","CONNECT_NODE","CONNECT_NODE_SUCCESS","CONNECT_NODE_FAIL","listNode","statusGetNode","errorGetNodeMessage","statusConnectNode","errorConnectNodeMessage","NotificationControllerActionTypes","SET_MODAL_NOTI_VISIBLE","isVisible","contentNoti","rootReducer","combineReducers","reducer","state","action","type","personReducer","show_avatar","walletReducer","payloadData","Array","isArray","keys","length","currentWalletInfo","walletUpdate","indexUpdate","findIndex","e","settingReducer","createWalletReducer","seedPhraseConfirm","isErrorConfirm","sendingCoinReducer","SET_LIST_TOKEN_ON_PERSON","nodeManageReducer","NotificationControllerReducer","middleware","thunk","createStore","applyMiddleware","makeConfiguredStore","getDefaultMiddleware","serializableCheck","store","persistStore","persistedReducer","persistReducer","key","whitelist","storage","stateReconciler","autoMergeLevel2","blackList","persistor","makeStore","width","height","viewBox","fill","xmlns","d","onPerfEntry","Wrapper","styled","Header","ListTab","Tab","motion","bg","Footer","WrapContent","fluid","container","document","getElementById","render","useState","SystemCore","setIsReady","tabs","setTabs","handleDeleteTab","useHistory","id","stopPropagation","then","prev","item","onDeleteItem","_handleSystemReady","useEffect","catch","className","onClick","animationIn","AnimatePresence","open","layout","background","animate","scale","opacity","icon","faClose","faPlus","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"sourceRoot":""}